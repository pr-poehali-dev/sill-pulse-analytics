import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

interface Plan {
  name: string;
  price: string;
  period: string;
  description: string;
  features: string[];
  popular?: boolean;
}

interface PricingPlansProps {
  type?: 'personal' | 'business';
}

const PricingPlans = ({ type = 'personal' }: PricingPlansProps) => {
  const { toast } = useToast();

  const personalPlans: Plan[] = [
    {
      name: '–ë–∞–∑–æ–≤—ã–π',
      price: '‚ÇΩ0',
      period: '–Ω–∞–≤—Å–µ–≥–¥–∞',
      description: '–î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤',
      features: [
        '–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Ä—ã–Ω–∫–∞',
        '–ë–∞–∑–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã',
        '50 –∑–∞–ø—Ä–æ—Å–æ–≤/–º–µ—Å—è—Ü',
        '–î–æ—Å—Ç—É–ø –∫ –≤–∞–∫–∞–Ω—Å–∏—è–º',
        'Email –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
      ]
    },
    {
      name: '–ü—Ä–æ—Ñ–∏',
      price: '‚ÇΩ490',
      period: '–º–µ—Å',
      description: '–î–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ä–∞–±–æ—Ç—ã',
      features: [
        '–í—Å–µ –∏–∑ –ë–∞–∑–æ–≤–æ–≥–æ',
        '–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã',
        '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
        '–¢–æ—Ç–∞ –ò–ò –ø–æ–º–æ—â–Ω–∏–∫',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–û—Ç—á–µ—Ç—ã –ø–æ –∫–∞—Ä—å–µ—Ä–Ω–æ–º—É —Ä–æ—Å—Ç—É'
      ],
      popular: true
    },
    {
      name: '–ü—Ä–µ–º–∏—É–º',
      price: '‚ÇΩ990',
      period: '–º–µ—Å',
      description: '–î–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤',
      features: [
        '–í—Å–µ –∏–∑ –ü—Ä–æ—Ñ–∏',
        'AI –∫–∞—Ä—å–µ—Ä–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
        '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è',
        '–ü—Ä–æ–≥–Ω–æ–∑—ã –∑–∞—Ä–ø–ª–∞—Ç',
        '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏',
        '–ú–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä'
      ]
    }
  ];

  const businessPlans: Plan[] = [
    {
      name: '–°—Ç–∞—Ä—Ç–æ–≤—ã–π',
      price: '‚ÇΩ14,990',
      period: '–º–µ—Å',
      description: '–î–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö HR-–∫–æ–º–∞–Ω–¥',
      features: [
        '–î–æ 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        '1000 –∑–∞–ø—Ä–æ—Å–æ–≤/–º–µ—Å—è—Ü',
        '–ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
        'Email –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã'
      ]
    },
    {
      name: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π',
      price: '‚ÇΩ29,990',
      period: '–º–µ—Å',
      description: '–î–ª—è –∞–≥–µ–Ω—Ç—Å—Ç–≤ –∏ —Å—Ä–µ–¥–Ω–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π',
      features: [
        '–î–æ 20 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        '–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã',
        '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
        'API –¥–æ—Å—Ç—É–ø',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–ö–∞—Å—Ç–æ–º–Ω—ã–µ –æ—Ç—á–µ—Ç—ã',
        '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏'
      ],
      popular: true
    },
    {
      name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π',
      price: '‚ÇΩ49,990',
      period: '–º–µ—Å',
      description: '–î–ª—è –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π',
      features: [
        '–î–æ 50 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        '–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã',
        '–ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ + AI',
        'API –¥–æ—Å—Ç—É–ø',
        'Dedicated support 24/7',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
        'White-label —Ä–µ—à–µ–Ω–∏—è',
        'SLA –≥–∞—Ä–∞–Ω—Ç–∏–∏'
      ]
    }
  ];

  const plans = type === 'business' ? businessPlans : personalPlans;

  const handlePlanSelect = (planName: string, price: string) => {
    if (price === '‚ÇΩ0') {
      toast({
        title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üéâ',
        description: '–ë–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω. –ù–∞—á–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!'
      });
    } else {
      toast({
        title: '–ü–ª–∞–Ω –≤—ã–±—Ä–∞–Ω!',
        description: `–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–ª–∞–Ω "${planName}". –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.`
      });
    }
  };

  return (
    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 lg:gap-8">
      {plans.map((plan, index) => (
        <Card 
          key={index}
          className={`relative hover:shadow-2xl transition-all duration-300 ${
            plan.popular ? 'border-[#20B0B4] border-2 sm:scale-105' : 'border-gray-200'
          }`}
        >
          {plan.popular && (
            <div className="absolute -top-3 sm:-top-4 left-1/2 transform -translate-x-1/2">
              <Badge className="bg-[#20B0B4] text-white px-3 sm:px-4 py-1 text-xs sm:text-sm">
                ‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
              </Badge>
            </div>
          )}
          
          <CardHeader className="pb-4">
            <CardTitle className="text-center">
              <div className="text-xl sm:text-2xl font-bold text-[#072A4A] mb-1 sm:mb-2">{plan.name}</div>
              <div className="text-xs sm:text-sm text-gray-600 mb-3 sm:mb-4">{plan.description}</div>
              <div className="flex items-baseline justify-center">
                <span className="text-3xl sm:text-4xl font-bold text-[#20B0B4]">{plan.price}</span>
                <span className="text-sm sm:text-base text-gray-600 ml-2">/{plan.period}</span>
              </div>
            </CardTitle>
          </CardHeader>
          
          <CardContent className="pt-0">
            <ul className="space-y-2 sm:space-y-3 mb-5 sm:mb-6">
              {plan.features.map((feature, i) => (
                <li key={i} className="flex items-start space-x-2 sm:space-x-3">
                  <Icon name="CheckCircle2" size={18} className="text-[#20B0B4] flex-shrink-0 mt-0.5 sm:w-5 sm:h-5" />
                  <span className="text-sm sm:text-base text-gray-700">{feature}</span>
                </li>
              ))}
            </ul>
            
            <Button 
              className={`w-full text-sm sm:text-base ${plan.popular ? 'bg-[#20B0B4] hover:bg-[#20B0B4]/90' : ''}`}
              variant={plan.popular ? 'default' : 'outline'}
              onClick={() => handlePlanSelect(plan.name, plan.price)}
            >
              {plan.price === '‚ÇΩ0' ? '–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ' : '–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω'}
            </Button>
          </CardContent>
        </Card>
      ))}
    </div>
  );
};

export default PricingPlans;